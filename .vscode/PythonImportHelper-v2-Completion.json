[
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "QuestionRequest",
        "kind": 6,
        "importPath": "qa_service.main",
        "description": "qa_service.main",
        "peekOfCode": "class QuestionRequest(BaseModel):\n    question: str\n@app.post(\"/predict\")\ndef predict(request: QuestionRequest):\n    request = QuestionRequest(\"How are u?\")\n    question = request.question\n    response = f\"Ответ на вопрос '{question}' связан с МИФИ.\"\n    return {\"answer\": response}",
        "detail": "qa_service.main",
        "documentation": {}
    },
    {
        "label": "predict",
        "kind": 2,
        "importPath": "qa_service.main",
        "description": "qa_service.main",
        "peekOfCode": "def predict(request: QuestionRequest):\n    request = QuestionRequest(\"How are u?\")\n    question = request.question\n    response = f\"Ответ на вопрос '{question}' связан с МИФИ.\"\n    return {\"answer\": response}",
        "detail": "qa_service.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "qa_service.main",
        "description": "qa_service.main",
        "peekOfCode": "app = FastAPI()\nclass QuestionRequest(BaseModel):\n    question: str\n@app.post(\"/predict\")\ndef predict(request: QuestionRequest):\n    request = QuestionRequest(\"How are u?\")\n    question = request.question\n    response = f\"Ответ на вопрос '{question}' связан с МИФИ.\"\n    return {\"answer\": response}",
        "detail": "qa_service.main",
        "documentation": {}
    }
]